import { BigNumber } from "ethers";
export declare type RawEventData = {
    data: string;
    topics: string[];
};
export declare type Event = {
    address: string;
    blockHash: string;
    blockNumber: number;
    event?: unknown;
    id: string;
    logIndex: number;
    raw: RawEventData;
    removed: boolean;
    returnValues: unknown;
    signature: unknown;
    transactionHash: string;
    transactionIndex: number;
};
declare type Events = {
    0: Event;
    1: Event;
};
export declare type EthersEvent = {
    address: string;
    blockHash: string;
    blockNumber: number;
    data: string;
    getBlock?: unknown;
    getTransaction?: unknown;
    getTransactionReceipt?: unknown;
    logIndex: number;
    topics: string[];
    transactionHash: string;
    transactionIndex: number;
};
declare type EthersEvents = EthersEvent[];
export declare type Web3Receipt = {
    blockHash: string;
    blockNumber: number;
    contractAddress?: string | null;
    cumulativeGasUsed: number;
    effectiveGasPrice: string;
    events: Events;
    from: string;
    gasUsed: number;
    logsBloom: string;
    status: boolean;
    to: string;
    transactionHash: string;
    transactionIndex: number;
    type: string;
};
export declare type EthersTokenReceipt = {
    blockHash: string;
    blockNumber: number;
    byzantium: boolean;
    confirmations: number;
    contractAddress?: string | null;
    cumulativeGasUsed: BigNumber;
    effectiveGasPrice: BigNumber;
    events: EthersEvents;
    from: string;
    gasUsed: BigNumber;
    logs: EthersEvents;
    logsBloom: string;
    status: number;
    to: string;
    transactionHash: string;
    transactionIndex: number;
    type: number;
};
export declare type EthersNativeReceipt = {
    blockHash: string;
    blockNumber: number;
    byzantium: boolean;
    confirmations: number;
    contractAddress?: string | null;
    cumulativeGasUsed: BigNumber;
    effectiveGasPrice: BigNumber;
    events: EthersEvents;
    from: string;
    gasUsed: BigNumber;
    logs: EthersEvents;
    logsBloom: string;
    status: number;
    to: string;
    transactionHash: string;
    transactionIndex: number;
    type: number;
};
export {};
